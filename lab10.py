class TrieNode:
    def __init__(self):
        self.children = {}
        self.is_word = False
        self.edge = [0, 0]

class Trie:
    def __init__(self):
        self.root = TrieNode()

    def add(self, patterns):
        num_nodes = 0
        for pattern in patterns:
            prev = None
            curr_node = self.root
            for char in pattern:
                if char not in curr_node.children:
                    num_nodes += 1
                    curr_node.children[char] = TrieNode()
                    temp = curr_node.children[char]
                    if prev is None:
                        temp.edge[1] = num_nodes
                    elif prev is not None:
                        temp.edge[0] = curr_node.edge[1]
                        temp.edge[1] = num_nodes

                prev = curr_node
                curr_node = curr_node.children[char]
            curr_node.is_word = True

def dfs(node):  # BA9A
    if node.is_word:
        return

    for key in node.children:
        temp = node.children[key]
        print(f"{temp.edge[0]}->{temp.edge[1]}:{key}")
        dfs(temp)



def suffix_array(text): # BA9G
    seqs = dict((i, text[i:]) for i in range(len(text)))
    return sorted(seqs.keys(), key=lambda x: seqs[x])


print(suffix_array("ACCTATCAGCTGTATCCATGTGACCATATCTACAGTTCCTGGCGAACTAAACGATAACAACGGACCACCCGAGATCTGGTTAATCCATACTTTCCCGCCAATTAGCAGTACCCCTAACCTCGCTGTCACGTGAGAGCGGGTGGCTACTCACAGCAGGCACCATCTTTTCGCGTTGTACGGTAACTCGGTAGACGCATTTGCACTGCCTCGCTACAGTCCTCGTCCCATAGTGTTAGGATTCAAGCCACACCAAGTGTAGGGGTAGCGTAAGGTAACAGGCGGAAACCTTCGGACGGATTTCGTCGGGTGGCTCAACTTAATTCCGTTCATGATCCACGAATAATTCCAGGTCCCGCGGCACGGTTTGGCATTAAATCAAATAGATTTGGCTGTGGAAGTCGTCGTTTGATCGCTGCGTATCCTTCCTCCTCAAATAATGTCTCCTCGTGTAAACCTCCGAAATTGGCACAGCCTCGTGCCGAAAGCATGGAGCATCCGGACCAAAGTACATACCCCCTTTCCTAAGCGCTGTCGGCACGCACTGTAGGTATATCCTTCGTCGCCTCTCCCCCCAAGCCTGTAGTTTGCCTTCAAAGCCTGTCCTAACTGAAGTCGTTTTTCACCGACGCCTATTTGCAATTAGGACGTAAGCGAGAGCTCCGCGGATCATTAGGGTGTTGTGTTAGCGTCTGGTAGGAACTGGGCAAAGTGGTCTCACATTGTTGAGTTTATGATAGATTAAACACAGTGGGTTTTGCGTGAAACGTATACAAGGGCATTCCTTAACGGGAAGATCTCAAAAAAGGGCTCTCTTCAGAAGCCTTGAGTGCCGCTCCGCAGGATTATCGTGTGGAGACGAACTTGCAGCCTGTTCAGGTTGCAAGGCATGCAGGGAGTCGTCGCCTAAGTACTCACCTCTAACTGACTCTCCTATCCACAAGATACTGCATACAGAGCGACGGGCTGCCATCTGCGGATACGCGGGACAGCCTCATCAGGGGCCAGCTCTTACAAGACAGATATTCCTCGATAATATCTGAGTTGCCTTACATAGCACATGGCCTGAAGGGGAGGGATTCTACGATGCTGACTCCACTCTCATAGCGTACTGGCGAGTGATGCCCTAGCAGACACTTTAAAACTGTCGCACGCCACCCAGGCGACAGGCCTCACCCCGCTTAACTCCAATTGGTTCGTATCTGACTCTACGTCGAGCAAATTTCTGGGTCGCGGCCGGGGGGTGTATCCACACATAATTCCCTTGAGCGAAACTAGGCTGTTTACATCACGAACCCGCTAGTGGCCCTGTGCACATCTGCACCCTGTCACGAGTTTACTGATCTCTACAGCTGAGCCGTGCGCATGTGCTCGACCAATATGGTTGCATCATAGATCATATAATCTTACCAGGTTGGGTCAACGGAACACCGTTGGTTTATGAAGTACCCCCTGTGGCCCAGCCTATGCAACATCCGAAGGACGATCGCAAATACAAGGCAGTGCCTCAGGTCGGATTCAGAATGCGGTTCGCCCACTTTCTTAGGTAGACACAAAAGTTGTCATGGTCCAGTTACCGCATGGGCCACCGAGTCTGTAAACCGAATCTTATATCCTCGCGTCGCGAACAAGAGATATACCGGGTAAGGAAGTACCGGACAGACCTCAAGGGTCCAGCCTTGAGAAGCATGGCGAGTTGCAGCACCGACCACTTAAGGTCCGCAGGATCGCGGAGACTTTAGGGTAGCGAGCCGTGATGAATCTAATGGTGAGAATATCTGCGCAGCCGTGCATCTTGCGGTAGCAATTTACCATCTTCATCACGGCCCCCGGCGTGAGACGGGGGCTCAGTGCGATCTGGCAAACTACTGATGCACCCTCAATCGTCCTATCCCTCGCAATATCGAATTTTAGAGAAGGCGGACACTATTGCGGGCGGGTAACACTCTATAGTGAAGTCGCAACGGCTATATCATTGCTCCATGTGCTCCCGCACTCAAGGGTCGCTCCTAGTAATAGGAGTGCGTATGGTACCTGCGTTTACTCCCGGTAGAATTGCGGCCTTAATTCATCCTAGTTAGATGATTCAGAAACATTCCCTTTTCTCCTTGTAGTTCACCATTAGATGCAACTTAGGATTCCTAATAGGGTCACCGTATGCATATTCTGACAACAGGCGCATGAAGCGCATTCGCCGACCCCAATTGTGATTCCCTTTTCCGTGGAACTCCCAGATGCACGTATTATACTAGGGGCCAGAAGAAGGGGCTGTTCCCCTGGCAGGGGTAGGTACGGCCAACCCCCTTTCCACTCTCTAGCTAGCTCGTCTCGAGATCCGAGCGCTCCAAAGCGGTACATGAGTCAACGCGTGATGACATGAGATGGCCGAGCTTATATCGGTAAGCGTGAGGATACCTGTATAAATAGCGAAGCGCGGACAAGACCAGATCAAAACAGTTATTGTATCAGGGGGAAGTATGGCACCATTACGACAAGAGTAACTTCTGTAAGGGGTCATAAATATGCACAATTAGTGAGCTTTAATGGGCCACCTTGCATGGTATGGTACTGGGCTGCCTCATTGAGCACTCGGCGATGTGCGATACGACGAACGGTAGTCGTATCCCGCGACCAAATGAGCGGCGTTAGTGGTATCGCGGGAACGGGCGTGTCTAATAGCGTAGCCTGCGGAGAGTTTTCCACGCGCGCTTTGGCAGTCACACAGTCCAAGGATGCTGTTGCCCGCTCGATCGTAAATAACACGCGTAGAAGTTGACTGCGTCATATCATCTCGGATTCGAGATTCTGTCCAATCCACTGCATATGCACAGCTGCCGGATTCGTCCCTCCGTACCAGGCTTGGTGGGCTACTTTGCTCCTGCTCCCCCTTTCAATATCGCCACCTTTTAGAGACTCGGAGGGTGCTGAGATATTGTTAAGCACATCCCCACTAGAGCCGATTCGCGCTCGGGGTACTGACCAACCCTGCCCGATCACTGTACCCTACTTTCGTGGGTTATCTCTGAACGTAGATCCGGCGGCCCAGTACCCCTCCCAGCGAACTCCCCGATCAATTTCCACCAGCCGTCCTTGGGAGGTAAGCACATCCCAGGTACTTCCACACGGCCCTGACCTGGGGGTCCTGTATTGCGGTCTATTACCAGGAGGATAAGATCGGGGCGAGCAATCGGCACGTAAAATGCTAATAGAAGTCTTGGCATAGCGCAAAACGGCCCCTATCTCGTCAAGATGATCTACCTACACGGCACTGAGCCCGCTACTATTTTGGAGGAAGCTCAGGATGTGATCGCTGTTACGGGAACCCTTTCTTGGCGTCGGAGTACTGACCTCTCCTCTCACGGCCACGACGGGTTCTCATCCCGCAAAAGTGATTTTTCCTTACCACCAGAATCGGCGCCAAAGTGCCTGAGCCATTGGATAAGCTAGTGATGTCTGGCAACTTAAGCCGACTTTCCCTTAGCCAGGGCGGAGTGGCAAGTGTACGAAGGTACGAAACTAGTTCTCTGTTCCAATGAGGAAGCGTATCTATAGCTCCGTCATTCCGCACGTCAATGCCCCGGGAAGTAAATCTTCATGCCGCAATTGATGACCTTAGCGCAACCGATTAGGCGTATCGCTGGGTGACTTCTCACCACAAGTAGCCGAACAACCCCCCCCTGCCAAAAGAAGACAAACAGCCCCTGATGATCCACGAAATAATAAAGACAGACAGCAATGGCAGGTAATCCCGGACAGTGTTGCAAGGAAACGCCTTTGATGGTTCTACTCGGGTAGGCGTCTTTTCTTGAGATAGCTACAATCGGCAGTCCGCTTGAGCAACGATTTGGCAACTCCGCACAAATCAAGGATTCGGCGCAGGAATCGCTACATATCATAGCTCGAAGGCTGCTTATTGCGCATACCACTCTCGGTGCCGTCGTTAAGTGCCCCGAGTTGTAGAGGGATCCAGAAACTATATAAGCTTATTGCGCAATCCTACCAACCGGTTGGAATTGAGGTGACCTCGGACATACAAATGCGACTCTGGATCGCGCTAGTGCTTCACACTAGTAGCTTGTGATCAGTATGAGGGCATTCGTCCCGTGGCAATTCGTCGAGACTGTTATTAGTGAGGGTGACTTCGGAGGAACGCCAACGAAACTTCCTTGGCAATCGAACAAAGGGAGTCGCCACGTTATCTATCATGTCACTATAACCGTAATCTGCATTAGAGCTCGATAGACAGATTGGAGCGCTCGACACTGTGCTTCAATAAGCCGAATGGACGTACTTCTAATCCTATATCCGCGTCGCATTTCATAGCCGAGACCACTCTGACCGATGTCCTGAGCCATTTCGGAGAACGAGTCGGCCTAAGTTCGGGCCGCGGATGCCACGCTTAAACCTGGGGCGACGAGGCAGCTGTAAAGCGTCAGGTATGTGCCGATAAACTACAAGTTGACTGTAAACAGTTAGTGGACGAAGCCCTTCGCCATATGCCTGGTGTACTCTTACTACTGGCAGAAAATCTTCGATACAACAATCCGGATGATAATGCACATTTCACGGGATTTTCCGTACGCAAGACACTGCTCCCTTGTAGTTCATTTTGGTCTACGCCCTCACAATCTGTTCGCGGGGATCACCAGCAGGCATCTAGTGGACCAAGACTTGCAAGCTGACTAATCAAAATAAAGTGGAATACCGGCTATAGAGTTGCGTGAAAGGCCAGAACTGGGGGCATGTGAGCAGTGTGCAGGCAGTACGAATTAGGATATGCACTGTAGAGCTTACACTCACCAGGCGCTGCTACAGAACTCCAACCTTTGGCGCCCCATGGTCTAATGTTCACGACACAAACTGATTACCGGCCGCTGGGGGTACATATACTGGCCTCATGGCCAGTCGCGGCGATGGTGTTGATAGCGGGGCGTACCGTAGGATGGACACGTGTTTACCGACGACGAAATGCCTATCTAAACGACCTATCAGGAGAGTTTAGTTGGTCGGTAGCTATTACTATTTTGCCACTCCTCCGGATAACCGCTAAGATCGGCCAACGCTGCTCCAACCGTAGCACTTACTCACACTGGGTGTTGAACATGGCATCGCTTCCATACAGCCGGGCCACACCGAGACTTACAAATGTAATGTCTTTGGATTGCGTAGAGCGGCGTCGATGAATCGATGAAGCGGTGTCAGCGAAAGTCCTTCAATCCCCGGCGAGTTAGATTACATCCTTGTTTGTGAAACAATTCGACGCAAGGTTCCGCTTTGCGCGGGTGAAACCAGATGCCCCTTAGCCGAATGATTACTCGTTTAATACAACTGTTAATACAAGCCTTCTCATGCCTTCCGCCAGGCGCTGAAGCAGGTCAATATAACTAAGGTGGTTGCGTGGTTCATATTCCTTGCCTATTCCTGGTGTTGCACAGAGGAAACGCAGTCTACATTTTAACTCGGGCACCGACATGGTATCAAGATAGTAGTAGGATGCCGATGTTTACGTTGTGGGGTACTCTTCTCCCGACCGCGCAACTAATTTCCGCGATAGTAACGCGCTCTAAGGTGTACGCCGTTAGCTAACTGCCCCCCCTGTGTCATGGTGCGCCCGGCGATGGCGAAACAATGTCAGCTGAGTCTGATTCTCACCCAGTCAGGCTTAGGCCTTGTCGTCCGCCAATCTTATAGATATCTAATTAACAGTCCGGTCTGGTAATAAGGGTGACGTACTCTAGGGCGGTTGATCAGCTATTATCTATAGTCCAACCATTGTGTTACCTGGACAAGTAGCTCAGTCTGGATGAGTCACTGGTTATCTACTAACAGCTAATCTTGAGTTTGTTTAACTACCTCTTCGTCGCCAACTCCTTTGTATGCTAAAATAACAGGAGTCCGGCCACAAAGATTTTCCATTGCTACAACACGTACTATCGAAAAGAGTAGCGTCGTGATAAAGATAAAGCCCTATACTCTACAGCAACCGGGACGTCTGGACCCCTCTGATGGCCCATGGTCTGAGCAGGGTAACAGCCAGGGGCTATCCTTCGGAATAATGCTTTTTGTACCTTGCCCGGTCCGTCGAGGTTTATAACTAGTTAATGCGTCTTAAAGATCCCCCCCAGCTCAGAAGCGTCGCTCTAAACCGAGAATACGACCCCATCCGCGGAATCAGTATGGCTGCTTTCATCGGACACTACTTCCGCCCTATTGCGCACTGGGGTGAGATGTGAACGAACATTTCACCTGCCCGCGATCGTGCACGACCGTTTCGCGTGAGGATCGTCTTTTTGGAGTCAGAACCGGGCTTGGGCACCCCTTGATTCTTTAGCAGTCAGGACGCTGCCGTCGTACGCCGAGAACCGCTAGCGAGATACGTAACGAAGATTTCGGTGTATAGCAACGCCTACTCTTGGACTTTCCTGTATGGATCAGAATCCCATGTTGATCCGACCTAGACCGAGCCGGGCGGCCCTATAAAGAAGCCTTCTTGATAGTAACGGTTTCGGCAGTAGTGTCTGCCTGTGAGGCGGATAGGTACCTAAGCTAGCGGGATGCACGCAGTTACATAGTGCTTTTCAGACAATGAACCGGCGGTATGCGTCAGAGGGATTTACGGCGATCGCCGACGGTTGCCGCATCCAGCAGCGAACCTAGAGGTTACCGTGCTGATCCTGACGGCTTAATACTCCATATAAGCATATTTCGCCGTGTTCGACACGAACATGGAGGCTAATCAATAAATGAATCGCGATCTCAGCTAAGTGTCGTTTTAGCCAAGCAGGTGCAAAGTCCTAGAAGGAGTTTTGCCAATCATCGCGTACTGACCACCTACTACTAGGCATGTTTGAGGCTGGCTGGGGCGCCCCCCGCTTGCAACTGAACAATGGCGCTTATTCTCGTTACACCACTTGTGGTTAGAATGCTAATTCGGCTGTCTGATTAAACCTGGACAATAGTAATATTGCTAGGAGGCACTCAGGGTATTGATAGAGAACACTGCTTGGGCTCATTTACCGCCATTTTGCTGATTCGTCTTCCATCAGACTCGCCGCCCGTTGCCCCAATTGACGGTCGCTACTAAAGGGAACTTGCGTTCGGGCTCTCGTCCAAGTCCATAGGGGCACGTTGATGAAGCTGCTTGAGCCACGGGCCCGGAAGCGCGGTCCGTCGACGTTCCTATACTGTGGTGCCGCACGTTAAACGCAGTTTGCAGACTCTTGGACGCTGGATAGCCCTAGTGTTTGACGACTTATTCACAGTGCACCCTCAAGTGATGAGCGGGGGCCCGAGGGTCGAGTTTCAGTGTCCCAGAGACGTACCTTTTTATACTCAGTGCATGCCTACCAGACTAATACCGATATGATCGACCGATCGCAAACTGCGATCTTGATAACGTTTCTGTAGTTGGCGCAATGGCATCACCGTGGTACTGACGAAACGCCAACGCGAAGAGCTAAACAAAAAGGGGTAGCCCGGAAATGAACCATTTCGATATGGCGCAAAAAATAAACCCAAACTACGTAGATTGATCAGGAGTGTGAATGGGGTGTCCATTATGAGGCTGTGAGCACTTGGGGTAAGTCGAGCAACGAACAGGTGAGGGGTTAACCGATGTAATAAAGCAGCCACGCGGATGCAGTATACAAGTCTACTCGGATGATCGATATCTCCGCGTGTCGGTTTCCTACAAAACCAGGGTCCCGCTTGACAGAGCAATCCAAGTTCCAGCGTTGCTATTGTGTCACAAAGTGCCGGGGCGCCGAATCTTAATTGGAGAAAAGCAACTAGAGAAAATTCGGCAAGATGAATAAGGTCAGCCACAAGGCATATATCTTCGATTGAAATATAGTTCATAATCTGCAATGTACAGGCAAGTATATGCCGATTCGCCAGACACATACAGACAGGCCGACATGGATTATTCCCGTAATTCCCTAAGAGCAACCACGTACGATTGAACTAGGGCTCCAGCGTGTGCCTAACGCAGCTCAGTCTCGTGGGAAGCTGGACATGATTACTGTCGGCGTCCAATCTGTATCAGATACAGTATTGTAGTTTTTCCTGGATAATCGGCATAGTTGTACTATATTCCGTTGAACTCTTGGCTGGGGGCTAGAATTGAGAGACTTATTCACATTCGAGCGGGTGCTGCATCAGCTTACCCAGTTTTCGGTGCTCGAGTCGGTGTTTCTCCATAAATCTGCGCCTCAAAAGTACGCAACTAGGTCAGCCTGCCATCAACATAGACGAAGTATCTCTTTTCCGGCGATTTAGGCGGCCTGACTGTCGCAATGATCGGGTCGCTAGTGTTGGGCCGATCGCAGTGTCCATCTCAGCGCGATTGCTTAATGCAAAAACTAAGACTGGGATGCGTGTGTATGCCTGCAGGAGCTTTCACATTGTTGCTTAAATTTTTAGCTCCACCGGGCATAGGATTTAATGTGCGAAAAATAGACCCCCGTACGTGTAACAGACGCGTATGGTTGCACCGTTGGATAGCTGCACACCCGCGTGCCGAACGTCCCCGTGATGGTTACGGGGATGGTAGACTCACTGAAATCCGTCAAGTCAGTGTTGCTATCCCATAATTGAAGGCCGAAACAATGGTAACCCCATTAAGCGGCGAGCCTAGTCGAAGGCAAAGAACCGATCTGTCCTATTCCAGCTAAGCGCCTTCCGCCCCGAGCGTACGATCTACGCCGGTATAGGGCTATAGTTTTAGCTTGAAGACAAATCGCTCCGAGGGCTCTCAGCGCATCACCCAAAGAAATGGCGTTAATAGCCCTATTTCAGTGGAATTACGATCTCCATATGCTTTTCCTGTGTTTATCTTGATTCAAACTGAGGCAAATGATATTTATGTGATGAAATTGGGTTACTTAATCATCGCTTCTCCATTTATGTTTATGAGATTCCCCAACGAAAACTATTACGGTCCGGCGCCACACCATTGCACAAGCAGAGGCGGTCTGGAAGTGCCTCCCGATCCTGGACGAGCGCAACAGCATATAGCTGAATATACGTGGATAGAACCTCTGGTCCGCCTGCCTGGCCTTATTGTCTCGCCAACGTTTGATCCGAATCGGAATCCCAGACTTCGCTGTTATGTCTAAATCAAGGCCGTCATAACCACTCGACCACACTGTGCCGGTAGTCATACGTCTCGGAACGGCCCGATGCGAACAGGGCGGATTGGAGTGGCTCGAGCCTGCTCCGGTAATGGCCATAGAGTTGATGAATGAATCAGTGTACGACCCATGTCTTACCGTTTTACACGCTCCGTCGTCAACGCTAAGGCCCACACAAGAGCCCTACCCCCGACCGGACGGGCTGCAAACCCGAAACACAGCGGTATGAGCCACCGGGATATGAGGTCCTCACGGCACGATGCCCTGGGCACACTTCACGAGGAAGAATGATAGACCACAATCTTCGCTCATCTCTTTTGCGAACCGTGATGCCGGCACGTCCCGTCCCGTGCAGCATGATCGTAGAGCTGACTGGAGGTCGTCTGCACGGTGTGAGGACTTAGCCTGGGACAATTAAGAAACACTCGGCATACCCCTATTAGCGACCATTTCCAGCAGAACGGGTAATGCTCGGCTTATCCAAGGTCCTGCTACCTGTAGCCTCCCCAGATCTGAAGGATGCTACACTTACACGGACCGGCTAAGTGGCAAGCTAGAAGTTGGGCTAAAACCGCCACGATATAGGCCAACTCATTAACCCTTTAACACTTGTCAGGAGTCAGAGCGGACATGTTCGCGATGGCATCCTATTAACTGCTTCGTGCGTGGACTGCCTTGTAGTCGTAGCCCTAATAAGTGGGGCAACCGGTTGGTAACCGACGGAGCTTTCGGGACACAATAAAGAGGATCGATGTCCTGTGGAGGTCCTCATCACTAAAGTTCTCAACGGTTATGCGGAATCATTGGCTAGGCGTATTGAGTCCAATGTATGTATGATATGAGGTGTTCAACGTAATGAGAGTAGATTCTTT$"))

with open('sequences.txt', 'r') as file:
    sequence_array = [line.strip() for line in file]

trie = Trie()
trie.add(sequence_array)
dfs(trie.root)